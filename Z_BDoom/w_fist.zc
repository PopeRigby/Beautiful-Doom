//******
// FIST
//******

Class BD_Fist : BDoomWeapon replaces Fist
{
int fcombo; // total # of light hits; reset by Light Finisher, Uppercut and Kick)
int lcombo; // # of light hits IN A ROW (at 5th goes to Light Finisher); reset by any finisher
int tcombo; // total # of hits, i.e. length of combo. Increased by puffs (i.e. actually hitting  the enemy)
int hurtchance; // % chance of FORCEPAINing the enemy with light punches (increased with tcombo, clamped at 15-85%)
bool bpunch; //(with Berserk) used left punch?
//int pconnected; // (unused) how many times the punch actually hit something
int targetdistance;
int jangle; //jump angle
Default {
	weapon.selectionorder 370;
	+WEAPON.NOALERT
	weapon.slotnumber 1;
	weapon.slotpriority 0;
	Weapon.Kickback 100;
	Obituary "$OB_MPFIST";
	Tag "$TAG_FIST";
	+WEAPON.WIMPY_WEAPON
	+WEAPON.MELEEWEAPON
}
override void BeginPlay() //required default values for A_CameraSway
	{
	maxOffsetTics = 1;
	offsetTics = -1;
	super.BeginPlay();
	}
override void DoEffect()
	{
	If (Owner)
		{
		if(bdoom_weapons == 2)
			{
				bNOAUTOFIRE = true;
				bWIMPY_WEAPON = true;
			}
		else
			{
				bNOAUTOFIRE = false;
				bWIMPY_WEAPON = false;
			}
		//Console.Printf("tcombo "..tcombo);
		}
	Super.DoEffect();
	}

states
	{
	Select:
		TNT1 A 0 A_JumpIf(bdoom_weapons == 2, "Select.Modern");
		TNT1 A 0 A_JumpIf(bdoom_weapons == 1, "Select.Enhanced");
		//TNT1 AAAAAAAA 0 A_Raise;
		TNT1 A 0 A_WeaponOffset(35.0,60.0,WOF_INTERPOLATE);
		FIS0 AAAAAA 1 {
			A_WeaponOffset(-5.0,-5.0,WOF_ADD);
			A_WeaponReady(WRF_NOFIRE|WRF_NOBOB);
			}
		goto ready;
	Deselect:
		TNT1 A 0 {
			A_ClearOverlays(2,3);
			invoker.fcombo = 0;
			invoker.lcombo = 0;
			invoker.tcombo = 0;
			invoker.hurtchance = 0;
			speed = 1.0;
			}
		TNT1 A 0 A_JumpIf(bdoom_weapons == 2, "Deselect.Modern");
		TNT1 A 0 A_JumpIf(bdoom_weapons == 1, "Deselect.Enhanced");
		FIS0 A 1 A_Lower;
		wait;
	Ready:
		TNT1 A 0 A_JumpIf(bdoom_weapons == 2, "Ready.Modern");
		TNT1 A 0 {
			A_ClearOverlays(2,3);
			invoker.fcombo = 0;
			invoker.lcombo = 0;
			invoker.tcombo = 0;
			invoker.hurtchance = 0;
			speed = 1.0;
			}
		TNT1 A 0 A_JumpIf(bdoom_weapons == 1, "Ready.Enhanced");
		FIS0 A 1 A_WeaponReady(WRF_NOSECONDARY);
		loop;
	Fire: //pre-fire 4 tics, fire 13 tics, refire 5 tics
		TNT1 A 0 A_JumpIf(bdoom_weapons == 2, "Fire.Modern");
		TNT1 A 0 A_JumpIf(bdoom_weapons == 1, "Fire.Enhanced");
		TNT1 A 0 A_AlertMonsters;
		TNT1 A 0 A_jumpifinventory("PowerStrength",1,"FireStrong");
			FIS0 A 1;
			FI10 BCD 1;
			FIS0 E 3 A_CustomPunch(2*random(1,10), TRUE,0, "FistPuff_Vanilla");
			FIS0 FGHIJ 2;
		TNT1 A 0 A_Refire;
	FireEnd:
			TNT0 A 1 A_WeaponOffset(0.0,60.0,WOF_INTERPOLATE);
			FIS0 AAAA 1 A_WeaponOffset(0.0,-7.0,WOF_ADD);
 		goto ready;
	Hold:
		TNT1 A 0 A_jumpifinventory("PowerStrength",1,"HoldStrong");
			TNT1 A 1;
			FIS0 BCD 1;
			FIS0 E 3 A_CustomPunch(2*random(1,10), TRUE,0, "FistPuff_Vanilla");
			FIS0 FGHIJ 2;
		TNT1 A 0 A_Refire;
		goto FireEnd;
	FireStrong:
			FIS0 A 1;
			FI10 BCD 1;
			FIS0 E 3 A_CustomPunch(20*random(1,10), TRUE,0, "FistPuffStrong");
			FIS0 EEEE 1 A_WeaponOffset(frandom(-1.3,1.3),frandom(0.0,1.5),WOF_ADD);
			FIS0 FGHIJJ 1;
		TNT1 A 0 A_Refire("HoldStrong");
		goto FireEnd;
	HoldStrong:
			TNT1 A 1;
			FIS0 BCD 1;
			FIS0 E 3 A_CustomPunch(20*random(1,10), TRUE,0, "FistPuffStrong");
			FIS0 EEEE 1 A_WeaponOffset(frandom(-1.3,1.3),frandom(0.0,1.5),WOF_ADD);
			FIS0 FGHIJJ 1;
		TNT1 A 0 A_Refire("HoldStrong");
		goto FireEnd;

	Select.Enhanced:
		//TNT1 AAAAAAAA 0 A_Raise;
			TNT0 A 0 A_WeaponReady(WRF_NOPRIMARY);
			FIST A 1 A_WeaponOffset(-40.0,60.0,WOF_INTERPOLATE);
			TNT0 A 0 A_WeaponReady(WRF_NOPRIMARY);
			FIST A 1 A_WeaponOffset(-30.0,50.0,WOF_INTERPOLATE);
			TNT0 A 0 A_WeaponReady(WRF_NOPRIMARY);
			FIST A 1 A_WeaponOffset(-20.0,45.0,WOF_INTERPOLATE);
			TNT0 A 0 A_WeaponReady(WRF_NOPRIMARY);
			FIST A 1 A_WeaponOffset(-10.0,35.0,WOF_INTERPOLATE);
		goto ready;
	Deselect.Enhanced:
		FIST A 1 A_Lower(12);
		loop;
	Ready.Enhanced:
		FIST A 1 A_WeaponReady;
		goto ready;
	Fire.Enhanced:
		TNT1 A 0 A_jumpifinventory("PowerStrength",1,"FireStrong.Enhanced");
			FIST A  1;
		TNT1 A 0 A_playsound("weapons/fist/swing");
			FIS1 BCD 1;
			FIST E 1 A_CustomPunch(2*random(1,10), TRUE,0, "FistPuff");
			FIST FGHIJ 2;
		TNT1 A 0 A_Refire("Hold.Enhanced");
	FireEnd.Enhanced:
			TNT0 A 1 A_WeaponOffset(0.0,60.0,WOF_INTERPOLATE);
			FIST AAAA 1 A_WeaponOffset(0.0,-7.0,WOF_ADD);
 		goto ready;
	Hold.Enhanced:
		TNT1 A 0 A_jumpifinventory("PowerStrength",1,"HoldStrong.Enhanced");
			TNT1 A 1;
		TNT1 A 0 A_playsound("weapons/fist/swing");
			FIST BCD 1;
			FIST E 1 A_CustomPunch(2*random(1,10), TRUE,0, "FistPuff");
			FIST FGHIJ 2;
		TNT1 A 0 A_Refire("Hold.Enhanced");
		goto FireEnd.Enhanced;
	FireStrong.Enhanced:
			FIST A  1;
		TNT1 A 0 A_playsound("weapons/fist/swing");
			FIS1 BCD 1;
			FIST E 1 A_CustomPunch(20*random(1,10), TRUE,0, "FistPuffStrong");
			FIST E 1 A_WeaponOffset(0.0,32.0,WOF_INTERPOLATE);
			FIST E 1 A_WeaponOffset(-1.0,33.0,WOF_INTERPOLATE);
			FIST E 1 A_WeaponOffset(1.0,34.0,WOF_INTERPOLATE);
			FIST E 1 A_WeaponOffset(2.0,32.0,WOF_INTERPOLATE);
			FIST FGHIJJ 1;
		TNT1 A 0 A_Refire("HoldStrong.Enhanced");
		goto FireEnd.Enhanced;
	HoldStrong.Enhanced:
			TNT1 A 1;
		TNT1 A 0 A_playsound("weapons/fist/swing");
			FIST BCD 1;
			FIST E 1 A_CustomPunch(20*random(1,10), TRUE,0, "FistPuffStrong");
			FIST E 1 A_WeaponOffset(0.0,32.0,WOF_INTERPOLATE);
			FIST E 1 A_WeaponOffset(-1.0,33.0,WOF_INTERPOLATE);
			FIST E 1 A_WeaponOffset(1.0,34.0,WOF_INTERPOLATE);
			FIST E 1 A_WeaponOffset(2.0,32.0,WOF_INTERPOLATE);
			FIST FGHIJJ 1;
		TNT1 A 0 A_Refire("HoldStrong.Enhanced");
		goto FireEnd.Enhanced;
	AltFire:
		TNT1 A 0 A_JumpIf(bdoom_weapons == 2, "AltFire.Modern");
		KICF AB 1;
	AltHold:
		TNT1 A 0 A_jumpifinventory("PowerStrength",1,"AltHoldStrong");
		KICK AB 1;
		TNT1 A 0 { 
			A_SetSpeed(0.2);
			A_playsound("weapons/kick/swing");
			}
		KICK CD 1;
		TNT1 A 0 A_Recoil(-2);
		KICK EF 1;
		KICK G 3 A_CustomPunch(3*random(5,12),TRUE,CPF_NOTURN,"KickPuff",72);
		KICK HD 2;
		KICK CBA 3;
		TNT1 A 2 A_SetSpeed(1);
		TNT1 A 0 A_ReFire("AltHold");
		KICF BA 2;
		goto ready;
	AltHoldStrong:
		KICK AB 1;
		TNT1 A 0 A_SetSpeed(0.5);
		TNT1 A 0 A_playsound("weapons/kick/swing");
		KICK CD 1;
		TNT1 A 0 A_Recoil(-5);
		KICK EF 1;
		KICK G 3 A_CustomPunch(30*random(3,10),TRUE,CPF_NOTURN,"KickPuffStrong",80);
		KICK HD 2;
		TNT1 A 0 A_SetSpeed(1);
		KICK CBA 3;
		TNT1 A 0 A_ReFire("AltHoldStrong");
		KICF BA 2;
		goto ready;

//modern
	Select.Modern:
		//TNT1 AAAAAAAA 0 A_Raise();
		TNT1 A 0 {
			A_WeaponOffset(0.0,42.0);
			A_PLaysound("mweapons/fist/wear");
			}
		NUKW ABCD 1 {
			A_WeaponOffset(0.0,-1.0,WOF_ADD);
			A_WeaponReady(WRF_NOFIRE|WRF_NOBOB);
			}
		NUKW EFG 2 {
			A_WeaponOffset(0.0,-1.0,WOF_ADD);
			A_WeaponReady(WRF_NOFIRE|WRF_NOBOB);
			}
		NUKW HIJ 2 {
			A_WeaponOffset(0.0,-1.0,WOF_ADD);
			A_WeaponReady(WRF_NOBOB);
			}
		goto ready;
	Deselect.Modern:
		NUKW J 1 A_Lower(12);
		loop;
	Ready.Modern:
		//WIDS A 1 A_WeaponReady(WRF_NOBOB);
		//loop;
		TNT1 A 0 A_Overlay(2,"Ready.Right");
		NUKL A 8 A_WeaponReady(WRF_ALLOWUSER1);
		TNT1 A 0 {
			invoker.fcombo = 0;	
			invoker.lcombo = 0;	
			invoker.tcombo = 0;
			//invoker.pconnected = 0;
			}
		goto ready;
	Ready.Left:
		NUKL A 50;
		stop;
	Ready.Right:
		NUKR A 50;
		stop;
	Fire.Modern: //increases all counters
		TNT1 A 0 {
			speed = 1.0;
			A_ClearOverlays(2,3);
			invoker.fcombo++;
			invoker.lcombo++;
			if (countinv("Modernberserk_Regen") > 0)
				return ResolveState("BerserkLP1");
			invoker.hurtchance = clamp(invoker.tcombo * 10, 15,85);
			return ResolveState(null);
			}
		TNT1 A 0 A_JumpIf(invoker.lcombo >= 5, "LightFinisher");
		TNT1 A 0 {
			A_Overlay(2,"Ready.Right");
			A_PlaySound("Mweapons/fist/swing",5);
			A_CameraSway(-1.6,0,5);
			}
		NUKL ABCD 1 {
			A_OverlayOffset(2,3.5,3.5,WOF_ADD);
			}
		NUKL E 1 {
			A_OverlayOffset(2,2.5,2.5,WOF_ADD);
				if (invoker.hurtchance > random(0,100))
					A_CustomPunch(4.0*frandom(1.5,4.5), TRUE,0, "ModernFistPuff_Pain");
				else
					A_CustomPunch(4.0*frandom(1.5,4.5), TRUE,0, "ModernFistPuff");
			A_WeaponOffset(frandom(-1.5,1.5),frandom(0.0,2.0),WOF_ADD);
			}
		TNT1 A 0 A_CameraSway(1.6,0,8);
		NUKL FGH 1 {
			A_OverlayOffset(2,-1.75,-1.75,WOF_ADD);
			}
		//TNT1 A 0 { invoker.tcombo = invoker.pconnected; }
		NUKL IIJJAAA 2 {
			A_WeaponReady(WRF_DISABLESWITCH|WRF_ALLOWUSER1);
			A_OverlayOffset(2,-1.75,-1.75,WOF_ADD);
			}
		goto ready;
	LightFinisher:
		TNT1 A 0 {
			A_Overlay(2,"Ready.Right");
			A_PlaySound("Mweapons/fist/heavyswing",5);
			A_CameraSway(-1.9,0,5);
			}
		NUKL ABCD 1 {
			A_OverlayOffset(2,3.5,3.5,WOF_ADD);
			}
		NUKL E 1 {
			invoker.lcombo = 0;
			A_OverlayOffset(2,2.5,2.5,WOF_ADD);
			A_CustomPunch(5.0*frandom(1.7,4.8), TRUE,0, "ModernFistPuff",68);
			A_WeaponOffset(2.0,frandom(0.0,2.0),WOF_ADD);
			}
		TNT1 A 0 A_CameraSway(1.9,0,8);
		NUKL EE 1 A_WeaponOffset(2.0,frandom(0.0,2.0),WOF_ADD);
		NUKL FGH 2 {
			A_OverlayOffset(2,-2.0,-2.0,WOF_ADD);
			//A_SetAngle(angle+0.31,SPF_INTERPOLATE);
			}
		//TNT1 A 0 { invoker.tcombo = invoker.pconnected; }
		NUKL IJAA 2 {
			A_WeaponReady(WRF_NOBOB|WRF_NOPRIMARY|WRF_ALLOWUSER1);
			A_OverlayOffset(2,-2.0,-2.0,WOF_ADD);
			//A_SetAngle(angle+0.31,SPF_INTERPOLATE);
			}
		goto ready.Modern+2;
	BerserkLP1:
		TNT1 A 0 A_JumpIf(invoker.bpunch == 1, "BerserkLP2");
		TNT1 A 0 {
			A_Overlay(2,"Ready.Right");
			A_PlaySound("Mweapons/fist/heavyswing",5);
			A_CameraSway(-1.3,0,3);
			}
		NUKL BC 1 {
			A_Recoil(-0.6);
			A_OverlayOffset(2,3.0,3.0,WOF_ADD);
			}
		TNT1 A 0 A_CameraSway(-1.3,0,5);
		NUKL E 1 {
			A_Recoil(-0.6);
			invoker.bpunch = 1;
			A_OverlayOffset(2,3.0,3.0,WOF_ADD);
			A_CustomPunch(14*frandom(1.5,4.5), TRUE,0, "ModernFistPuff_Berserk");
			}
		NUKL FG 1 {
			A_OverlayOffset(2,-1.125,-1.125,WOF_ADD);
			}
		NUKL HHIIJJ 1 {
			A_WeaponReady(WRF_NOSWITCH|WRF_NOBOB|WRF_ALLOWUSER1);
			A_OverlayOffset(2,-1.125,-1.125,WOF_ADD);
			}
		NUKL A 1 A_WeaponReady(WRF_NOSWITCH|WRF_NOBOB|WRF_ALLOWUSER1);
		goto ready;
	BerserkLP2:
		TNT1 A 0 A_JumpIf(invoker.lcombo >= 7, "BerserkLightFinisher");
		TNT1 A 0 {
			A_Overlay(2,"Ready.Left");
			A_PlaySound("Mweapons/fist/heavyswing",6);
			A_CameraSway(1.3,0,3);
			}
		NUKR BD 1 {
			A_Recoil(-0.6);
			A_OverlayOffset(2,-3.0,3.0,WOF_ADD);
			}
		NUKR F 1 {
			A_Recoil(-0.6);
			invoker.bpunch = 0;
			A_OverlayOffset(2,-3.0,3.0,WOF_ADD);
			A_CustomPunch(14*frandom(1.5,4.5), TRUE,0, "ModernFistPuff_Berserk");
			}
		TNT1 A 0 A_CameraSway(-1.3,0,5);
		NUKB GH 1 {
			A_OverlayOffset(2,1.125,-1.125,WOF_ADD);
			}
		NUKB IIJJKK 1 {
			A_WeaponReady(WRF_NOSWITCH|WRF_NOBOB|WRF_ALLOWUSER1);
			A_OverlayOffset(2,1.125,-1.125,WOF_ADD);
			}
		NUKR A 1 A_WeaponReady(WRF_NOSWITCH|WRF_NOBOB|WRF_ALLOWUSER1);
		goto ready;
	BerserkLightFinisher:
		TNT1 A 0 {
			A_Overlay(2,"Ready.Left");
			A_PlaySound("Mweapons/fist/heavyswing",5);
			A_CameraSway(1.7,0,4);
			}
		NUKR CDE 1 {
			A_Recoil(-0.35);
			A_OverlayOffset(2,-5.5,6.3,WOF_ADD);
			}
		NUKR F 1 {
			invoker.bpunch = 0;
			invoker.lcombo = 0;
			A_Recoil(-0.5);
			A_OverlayOffset(2,-5.5,6.3,WOF_ADD);
			A_CustomPunch(18*frandom(1.8,5.0), TRUE,0, "ModernFistPuff_Berserk");
			A_WeaponOffset(frandom(-2.0,2.0),frandom(0.0,2.5),WOF_ADD);
			}
		TNT1 A 0 A_CameraSway(-1.7,0,8);
		NUKR GH 1 {
			A_OverlayOffset(2,2.9,-3.1,WOF_ADD);
			}
		NUKR IJK 1 {
			A_OverlayOffset(2,2.9,-3.1,WOF_ADD);
			}
		//TNT1 A 0 { invoker.tcombo = invoker.pconnected; }
		NUKR LM 2 {
			A_WeaponReady(WRF_DISABLESWITCH|WRF_NOPRIMARY|WRF_NOBOB|WRF_ALLOWUSER1);
			A_OverlayOffset(2,2.9,-3.1,WOF_ADD);
			}
		TNT1 A 2 {
			A_WeaponReady(WRF_DISABLESWITCH|WRF_NOBOB|WRF_ALLOWUSER1);
			A_OverlayOffset(2,2.9,-3.1,WOF_ADD);
			}
		NUKR BA 1 A_WeaponReady(WRF_NOSECONDARY|WRF_NOBOB|WRF_ALLOWUSER1);
		goto ready;
	Altfire.Modern: //resets light punch sequence, keeps total # of light punches, increases total counter
		TNT1 A 0 {
			A_ClearOverlays(3,3);
			speed = 1.0;
			if (CountInv("Modernberserk_Regen") > 0)
				return REsolveState("BerserkJump");
			A_Overlay(2,"Ready.Left");
			return ResolveState(null);
			}
		TNT1 A 0 {
			if (invoker.fcombo == 1 && invoker.lcombo > 0)
				return ResolveState("HeavyPunch1");
			if (invoker.fcombo == 2 && invoker.lcombo > 0)
				return ResolveState("HeavyPunch2");
			if (invoker.fcombo >= 3 && invoker.lcombo > 0)
				return ResolveState("Uppercut");
			invoker.tcombo = 0;
			//invoker.pconnected = 0;
			return ResolveState(null);
			}
		NUKR AB 2;
	HeavyPunch1:
		TNT1 A 0 {
			A_PlaySound("Mweapons/fist/swing",5);
			A_CameraSway(1.7,0,4);
			}
		NUKR CDE 1 {
			A_Recoil(-0.35);
			A_OverlayOffset(2,-5.5,6.3,WOF_ADD);
			//A_SetAngle(angle+0.35,SPF_INTERPOLATE);
			}
		NUKR F 1 {
			invoker.lcombo = 0;
			A_Recoil(-0.5);
			A_OverlayOffset(2,-5.5,6.3,WOF_ADD);
			A_CustomPunch(6.0*frandom(2.5,5.0), TRUE,0, "ModernFistPuff",72);
			A_WeaponOffset(frandom(-2.0,2.0),frandom(0.0,2.5),WOF_ADD);
			//A_SetAngle(angle+0.35,SPF_INTERPOLATE);
			}
		TNT1 A 0 A_CameraSway(-1.7,0,8);
		NUKR GH 1 {
			A_OverlayOffset(2,2.9,-3.1,WOF_ADD);
			}
		NUKR IJK 1 {
			A_OverlayOffset(2,2.9,-3.1,WOF_ADD);
			}
		//TNT1 A 0 { invoker.tcombo = invoker.pconnected; }
		NUKR LM 2 {
			A_WeaponReady(WRF_DISABLESWITCH|WRF_NOSECONDARY|WRF_NOBOB|WRF_ALLOWUSER1);
			A_OverlayOffset(2,2.9,-3.1,WOF_ADD);
			}
		TNT1 A 2 {
			A_WeaponReady(WRF_DISABLESWITCH|WRF_NOSECONDARY|WRF_NOBOB|WRF_ALLOWUSER1);
			A_OverlayOffset(2,2.9,-3.1,WOF_ADD);
			}
		NUKR BA 1 {
			A_WeaponReady(WRF_NOSECONDARY|WRF_NOBOB|WRF_ALLOWUSER1);
			}
		goto ready;
	HeavyPunch2:
		TNT1 A 0 {
			A_PlaySound("Mweapons/fist/heavyswing",5);
			A_CameraSway(1.9,0,5);
			}
		NUKR BCDE 1 {
			A_Recoil(-0.85);
			A_OverlayOffset(2,-5.5,6.3,WOF_ADD);
			}
		NUKR F 2 {
			invoker.lcombo = 0;
			A_Recoil(-0.5);
			A_OverlayOffset(2,-5.5,6.3,WOF_ADD);
			A_CustomPunch(6.5*frandom(3.0,6.0), TRUE,0, "ModernFistPuffHeavy",76);
			A_WeaponOffset(frandom(-2.0,2.0),frandom(0.0,2.5),WOF_ADD);
			}
		TNT1 A 0 A_CameraSway(-1.9,0,8);
		NUKR GH 1 {
			A_OverlayOffset(2,3.4,-3.9,WOF_ADD);
			}
		NUKR IJ 2 {
			A_OverlayOffset(2,3.4,-3.9,WOF_ADD);
			}
		//TNT1 A 0 { invoker.tcombo = invoker.pconnected; }
		NUKR KLM 2 {
			A_WeaponReady(WRF_DISABLESWITCH|WRF_NOSECONDARY|WRF_NOBOB|WRF_ALLOWUSER1);
			A_OverlayOffset(2,3.4,-3.9,WOF_ADD);
			//A_SetAngle(angle-0.28,SPF_INTERPOLATE);
			}
		TNT1 A 3 {
			A_WeaponReady(WRF_DISABLESWITCH|WRF_NOSECONDARY|WRF_NOBOB|WRF_ALLOWUSER1);
			A_OverlayOffset(2,3.4,-3.9,WOF_ADD);
			}
		NUKR BA 3 {
			A_WeaponReady(WRF_NOSECONDARY|WRF_NOBOB|WRF_ALLOWUSER1);
			}
		goto ready;
	Uppercut:
		TNT1 A 0 {
			A_PlaySound("Mweapons/fist/heavyswing",5);
			A_CameraSway(0.0,-3.2,4);
			}
		NUKU ABC 1 {
			A_Recoil(-1.5);
			A_OverlayOffset(2,-5.5,6.3,WOF_ADD);
			}
		NUKU D 1 {
			invoker.lcombo = 0;
			invoker.fcombo = 0;
			A_Recoil(-0.35);
			A_OverlayOffset(2,-5.5,6.3,WOF_ADD);
			A_CustomPunch(8*frandom(3.4,6.5), TRUE,0, "ModernFistPuffUppercut",79);
			A_WeaponOffset(frandom(-2.0,2.0),frandom(0.0,2.5),WOF_ADD);
			}
		TNT1 A 0 A_CameraSway(0.0,3.2,10);
		NUKU DDDD 1 A_WeaponOffset(frandom(-1.0,1.0),frandom(0.0,2.0),WOF_ADD);
		NUKU EFG 2 {
			A_OverlayOffset(2,3.14,-3.6,WOF_ADD);
			}
		//TNT1 A 0 { invoker.tcombo = invoker.pconnected; }
		NUKU HIJK 2 {
			//if (CountInv("Modernberserk_Regen") > 0) 
				//A_SetTics(1);
			A_WeaponReady(WRF_DISABLESWITCH|WRF_NOSECONDARY|WRF_NOBOB|WRF_ALLOWUSER1);
			A_OverlayOffset(2,3.14,-3.6,WOF_ADD);
			}
		TNT1 A 3 {
			A_WeaponReady(WRF_DISABLESWITCH|WRF_NOSECONDARY|WRF_NOBOB|WRF_ALLOWUSER1);
			}
		NUKR BA 3 {
			A_WeaponReady(WRF_NOSECONDARY|WRF_NOBOB|WRF_ALLOWUSER1);
			A_OverlayOffset(2,3.0,0.0,WOF_ADD);
			}
		goto ready;
	BerserkJump:
		TNT1 A 0 {
			A_ClearOverlays(2,3);
			A_PlaySound("Mweapons/fist/heavyswing",5);
			A_CameraSway(0.0,-4.5,5);
			FLineTraceData tdistance;
			LineTrace(angle,320,pitch,TRF_NOSKY,32,0,0,tdistance);
			//A_LogInt(tdistance.distance);
			Thrust(tdistance.distance * 0.075, angle);
			vel.z = tdistance.distance * 0.0185;
			gravity = 0.7;
			invoker.jangle = angle;
			}
		NUKJ ABCD 1 {
			if (angle != invoker.jangle)
				A_SetAngle(invoker.jangle,SPF_INTERPOLATE);
			}
	BerserkHang:
		NUKJ E 1 {
			if (angle != invoker.jangle)
				A_SetAngle(invoker.jangle,SPF_INTERPOLATE);
			A_SetPitch(pitch-0.5,SPF_INTERPOLATE);
			}
		TNT1 A 0 A_JumpIf(vel.z == 0, "JumpEnd");
		loop;
	JumpEnd:
		TNT1 A 0 {
			A_CameraSway(0.0,8.5,7);
			gravity = 1.0;
			}
		NUKJ FHIK 1;
		NUKJ L 5 {
			A_QuakeEx(5,5,2,7,0,96,"none",QF_SCALEDOWN);
			A_PlaySound("Mweapons/fist/heavyhit");
			if (bdoom_debris == 1) {
			for (int i=0; i<8; i++)
				A_SpawnItemEx("ShotSmoke",random(8.0,56.0),frandom(-16.0,16.0),0,frandom(-0.1,0.1),frandom(-0.1,0.1),frandom(0.4,0.7),0,0,32);
			for (int i=0; i<15; i++)
				A_SpawnItemEx("Wallpart",random(8.0,56.0),frandom(-16.0,16.0),0,	frandom(3.5,6.0),0,frandom(8.0,12.0),	random(-20,20),0,64);
			}
			A_Explode(10*frandom(3.5,6.0),40,false,false,80,0,0,"ModernFistPuff_Berserk");
			invoker.fcombo = 0;
			invoker.lcombo = 0;
			}
		TNT1 A 0 {
			A_WeaponOffset(0.0,52);
			A_Overlay(2,"Ready.Right");
			}
		NUKR AAAA 2 A_WeaponOffset(0.0,-5.0,WOF_ADD|WOF_INTERPOLATE);
		NUKR A 5 A_WEaponReady(WRF_NOSWITCH);
		goto ready;
	User1: //kick | resets sequential and total light punch coutners, decreases total counter by 1 (if it's > 0)
		TNT1 A 0 {
			A_Overlay(2,"Ready.Left");
			A_Overlay(3,"Ready.Right");
			}
		TNT1 A 0 A_Jumpif(invoker.tcombo > 0, 3);
		TNT1 AA 1 {
			A_OverlayOffset(2,-3.0,2.0,WOF_ADD);
			A_OverlayOffset(3,3.0,2.0,WOF_ADD);
			}
		TNT1 A 0 A_Jumpif(invoker.tcombo > 1, 3);
		KICK AB 1 {
			A_OverlayOffset(2,-3.0,2.0,WOF_ADD);
			A_OverlayOffset(3,3.0,2.0,WOF_ADD);
			}
		TNT1 A 0 { 
			speed = 0.1;
			if(invoker.tcombo > 1)
				A_PlaySound("Mweapons/fist/heavyswing",5);
			else
				A_PlaySound("Mweapons/fist/swing",5);
			A_CameraSway(0.0,3.0,5);
			}
		KICK CD 1 {
			A_OverlayOffset(2,-3.0,2.0,WOF_ADD);
			A_OverlayOffset(3,3.0,2.0,WOF_ADD);
			}
		KICK EF 1 A_Recoil(clamp (invoker.tcombo, 1, 4) * -1.3);
		KICK G 3 {
			A_Recoil(clamp (invoker.tcombo, 1, 4) * -1.3);
			A_CustomPunch(10.0*frandom(3.0,5.5), TRUE,CPF_NOTURN, "ModernKickPuff",83);
			invoker.lcombo = 0;
			invoker.fcombo = 0;
			if (invoker.tcombo > 0)
				invoker.tcombo--;
			}
		TNT1 A 0 A_CameraSway(0.0,-3.0,8);
		KICK HDC 2 {
			A_OverlayOffset(2,3.0,-2.0,WOF_ADD);
			A_OverlayOffset(3,-3.0,-2.0,WOF_ADD);
			}
		//TNT1 A 0 { invoker.tcombo = invoker.pconnected; }
		KICK BA 3 {
			A_WeaponReady(WRF_DISABLESWITCH|WRF_NOSECONDARY|WRF_NOBOB);
			A_OverlayOffset(2,3.0,-2.0,WOF_ADD);
			A_OverlayOffset(3,-3.0,-2.0,WOF_ADD);
			}
		TNT1 A 2 {
			A_WeaponReady(WRF_NOSECONDARY|WRF_NOBOB);
			A_OverlayOffset(2,3.0,-2.0,WOF_ADD);
			A_OverlayOffset(3,-3.0,-2.0,WOF_ADD);
			speed = 1.0;
			}
		goto ready;
	}
}

Class ModernFistPuff : BdoomPuff
{
Default {
+PUFFGETSOWNER
+PUFFONACTORS
+NOEXTREMEDEATH
attacksound "Mweapons/fist/punch";
seesound "Mweapons/fist/punch";
mass 1;
	}
states
	{
	Crash:
		TNt1 A 0 {
			A_SetPitch(target.pitch+frandom(-1.0,1.0),SPF_INTERPOLATE,AAPTR_TARGET);
			/*if(target)
				Console.PrintF("Angle to you: "..AngleTo(target));*/
			}
		stop;
	melee:
		TNt1 A 0 {
			if(target) {
				let bdfist = BD_Fist (target.player.readyweapon);
				if (bdfist)
					bdfist.tcombo++; //bdfist.pconnected++;
				}
			A_SetPitch(target.pitch+frandom(-1.0,1.0),SPF_INTERPOLATE,AAPTR_TARGET);
			}
		stop;
	}		
}


Class ModernFistPuff_Pain : ModernFistPuff
{
Default {
	+FORCEPAIN
	}
}

Class ModernFistPuff_Berserk : ModernFistPuff
{
Default {
	-NOEXTREMEDEATH
	+FORCEPAIN
	+EXTREMEDEATH
	decal "FistScorch";
	attacksound "Mweapons/fist/heavyhit";
	seesound "Mweapons/fist/heavyflesh";
	}
states
	{
	Crash:
		TNT1 A 0 A_JumpIf(bdoom_debris ==0,"Null");
		TNT1 AA 0 A_SpawnItemEx("ShotSmoke",frandom(-3.0,3.0),frandom(-3.0,3.0),frandom(-1.0,1.0),frandom(-0.3,0.3),frandom(-0.3,0.3),frandom(-0.3,0.3),0,0,32);
		TNT1 AAAA 0 A_SpawnItemEx("Wallpart",0,0,0,	random(1,3),0,random(6,12),	random(0,360),0,64);
		stop;
	}
}
	

Class ModernFistPuffHeavy : ModernFistPuff
{
Default {
	+FORCEPAIN
	+HITTRACER
	attacksound "Mweapons/fist/heavypunch";
	seesound "Mweapons/fist/heavypunch";
	}
states
	{
	Crash:
		TNT1 A 0 A_JumpIf(bdoom_debris ==0,"Null");
		TNT1 AAA 0 A_SpawnItemEx("ShotSmoke",frandom(-3.0,3.0),frandom(-3.0,3.0),frandom(-1.0,1.0),frandom(-0.3,0.3),frandom(-0.3,0.3),frandom(-0.3,0.3),0,0,32);
		TNT1 AAAAA 0 A_SpawnItemEx("Wallpart",0,0,0,	random(1,3),0,random(6,12),	random(0,360),0,64);
		TNT1 A 0 A_SetPitch(target.pitch+frandom(-2.0,2.0),SPF_INTERPOLATE,AAPTR_TARGET);
		stop;
	melee:
		TNT1 A 0 {
			if(target) {
				let bdfist = BD_Fist (target.player.readyweapon);
				if (bdfist)
					bdfist.tcombo++; //bdfist.pconnected++;
				}
			if (tracer && ( tracer.bISMONSTER == false || tracer.bNOBLOOD == true))
					return ResolveState("Crash");
			return ResolveState(null);
			}
		TNT1 A 0 {
			if (tracer) {
				if (tracer.bNOGRAVITY == false)
					tracer.vel.z += clamp(1.0 * 130 / tracer.mass, 0.0, 1.5);
				if (target)
					tracer.vel += AngletoVector (target.AngleTo (tracer), 4.0);
				}
			A_SetPitch(target.pitch+frandom(-2.0,2.0),SPF_INTERPOLATE,AAPTR_TARGET);
			}
		stop;
	}		
}

Class ModernKickPuff : ModernFistPuffHeavy
{
states
	{
	Crash:
		TNT1 AAAAAA 0 A_SpawnItemEx("ShotSmoke",frandom(-3.0,3.0),frandom(-3.0,3.0),frandom(-1.0,1.0),frandom(-0.3,0.3),frandom(-0.3,0.3),frandom(-0.3,0.3),0,0,32);
		TNT1 AAAAAAA 0 A_SpawnItemEx("Wallpart",0,0,0,	random(1,3),0,random(6,12),	random(0,360),0,64);
		TNT1 A 0 {
			A_SetPitch(target.pitch+frandom(-2.0,2.0),SPF_INTERPOLATE,AAPTR_TARGET);
			}
		stop;
	melee:
		TNT1 A 0 {
			if(target) {
				let bdfist = BD_Fist (target.player.readyweapon);
				if (bdfist)
					bdfist.tcombo++; //bdfist.pconnected++;
				}
			A_AlertMonsters(256,AMF_EMITFROMTARGET);
			A_RadiusThrust(512,80,RTF_NOIMPACTDAMAGE,64);
			if (tracer) {
				if (tracer.bISMONSTER == false || tracer.bNOBLOOD == true)
					return ResolveState("Crash");
				return ResolveState(null);
				}
			return ResolveState(null);
			}
		TNT1 A 0 {
			if (tracer) {
				if (tracer.bNOGRAVITY == false)
					tracer.vel.z += clamp(1.5 * 130 / tracer.mass, 0.5, 3.0);
				if (target)
					tracer.vel += AngletoVector (target.AngleTo (tracer), 5.5);
				}
			A_SetPitch(target.pitch+frandom(-2.0,2.0),SPF_INTERPOLATE,AAPTR_TARGET);
			}
		stop;
	}		
}

Class ModernKickPuff_Berserk : ModernKickPuff
{
Default {
	decal "KickScorchBerserk";
	-NOEXTREMEDEATH
	+EXTREMEDEATH
	attacksound "Mweapons/fist/heavyhit";
	seesound "Mweapons/fist/heavyflesh";
	}
states
	{
	melee:
		TNT1 A 0 {
			if(target) {
				let bdfist = BD_Fist (target.player.readyweapon);
				if (bdfist)
					bdfist.tcombo++; //bdfist.pconnected++;
				}
			A_AlertMonsters(256,AMF_EMITFROMTARGET);
			A_RadiusThrust(512,80,RTF_NOIMPACTDAMAGE,64);
			if (tracer) {
				if (tracer.bISMONSTER == false || tracer.bNOBLOOD == true)
					return ResolveState("Crash");
				return ResolveState(null);
				}
			return ResolveState(null);
			}
		TNT1 A 0 {
			if (tracer) {
				if (tracer.bNOGRAVITY == false)
					tracer.vel.z += clamp(1.5 * 180 / tracer.mass, 1.0, 5.0);
				if (target)
					tracer.vel += AngletoVector (target.AngleTo (tracer), 12.0);
				}
			A_SetPitch(target.pitch+frandom(-2.0,2.0),SPF_INTERPOLATE,AAPTR_TARGET);
			}
		stop;
	}		
}

Class ModernFistPuffUppercut : ModernFistPuffHeavy
{
default {
	seesound "Mweapons/fist/uppercut";
	}
states
	{
	Crash:
		TNT1 A 0 A_JumpIf(bdoom_debris ==0,"Null");
		TNT1 AAAA 0 A_SpawnItemEx("ShotSmoke",frandom(-3.0,3.0),frandom(-3.0,3.0),frandom(-1.0,1.0),frandom(-0.3,0.3),frandom(-0.3,0.3),frandom(-0.3,0.3),0,0,32);
		TNT1 AAAAAAA 0 A_SpawnItemEx("RicochetSpark",random(-3,3),random(-3,3),random(-1,1),	frandom(1.0,1.5),0,frandom(1.0,3.5),random(0,360),0,40);
		TNT1 AAAAAAA 0 A_SpawnItemEx("Wallpart",0,0,0,	random(1,3),0,random(6,12),	random(0,360),0,64);
		TNT1 A 0 {
			A_SetPitch(target.pitch+frandom(-2.0,2.0),SPF_INTERPOLATE,AAPTR_TARGET);
			}
		stop;
	Melee:
		TNT1 A 0 {
			if(target) {
				let bdfist = BD_Fist (target.player.readyweapon);
				if (bdfist)
					bdfist.tcombo++; //bdfist.pconnected++;
				}
			A_AlertMonsters(196,AMF_EMITFROMTARGET);
			if (tracer && (tracer.bISMONSTER == false || tracer.bNOBLOOD == true))
					return ResolveState("Crash");
			return ResolveState(null);
			}
		TNT1 A 0 {
			if (tracer) {
				if (tracer.bNOGRAVITY == false)
					tracer.vel.z += clamp(7.0 * 120 / tracer.mass, 0.0, 9.0);
				if (target)
					tracer.vel += AngleToVector (target.AngleTo (tracer), 0.5);
				}
			A_SetPitch(target.pitch+frandom(-2.0,2.0),SPF_INTERPOLATE,AAPTR_TARGET);
			}
		stop;
	}
}

Class ModernFistPuffUppercut_Berserk : ModernFistPuffUppercut
{
Default {
	-NOEXTREMEDEATH
	+EXTREMEDEATH
	attacksound "Mweapons/fist/heavyhit";
	seesound "Mweapons/fist/heavyflesh";
	}
states
	{
	Crash:
		TNT1 A 0 A_JumpIf(bdoom_debris ==0,"Null");
		TNT1 AAAAAA 0 A_SpawnItemEx("ShotSmoke",frandom(-3.0,3.0),frandom(-3.0,3.0),frandom(-1.0,1.0),frandom(-0.3,0.3),frandom(-0.3,0.3),frandom(-0.3,0.3),0,0,32);
		TNT1 AAAAAAAAAAA 0 A_SpawnItemEx("RicochetSpark",random(-3,3),random(-3,3),random(-1,1),	frandom(1.0,1.5),0,frandom(1.0,3.5),random(0,360),0,40);
		TNT1 AAAAAAA 0 A_SpawnItemEx("Wallpart",0,0,0,	random(1,3),0,random(6,12),	random(0,360),0,64);
		TNT1 A 0 A_SetPitch(target.pitch+frandom(-2.0,2.0),SPF_INTERPOLATE,AAPTR_TARGET);
		stop;
	Melee:
		TNT1 A 0 {
			if(target) {
				let bdfist = BD_Fist (target.player.readyweapon);
				if (bdfist)
					bdfist.tcombo++; //bdfist.pconnected++;
				}
			A_AlertMonsters(196,AMF_EMITFROMTARGET);
			if (tracer && (tracer.bISMONSTER == false || tracer.bNOBLOOD == true))
					return ResolveState("Crash");
			return ResolveState(null);
			}
		TNT1 A 0 {
			if (tracer) {
				if (tracer.bNOGRAVITY == false)
					tracer.vel.z += clamp(9.0 * 120 / tracer.mass, 1.0, 14.0);
				if (target)
					tracer.vel += AngleToVector (target.AngleTo (tracer), 5.0);
				}
			A_SetPitch(target.pitch+frandom(-2.0,2.0),SPF_INTERPOLATE,AAPTR_TARGET);
			}
		stop;
	}
}

Class FistPuff : BdoomPuff
{
Default {
+PUFFGETSOWNER
+PUFFONACTORS
+NOEXTREMEDEATH
attacksound "weapons/fist/hitwall";
seesound "weapons/fist/punch";
mass 1;
	}
}

Class FistPuff_Vanilla : FistPuff
{
Default {
attacksound "none";
seesound "weapons/doompunch";
	}
}

Class FistPuffStrong : FistPuff
{
Default {
decal "FistScorch";
attacksound "weapons/fist/strong";
seesound "weapons/fist/strong";
-NOEXTREMEDEATH
	}
states
	{
	Crash:
		TNT1 A 0 A_JumpIf(bdoom_debris ==0,"Null");
		TNT1 AAAA 0 A_SpawnItemEx("ShotSmoke",frandom(-3.0,3.0),frandom(-3.0,3.0),frandom(-1.0,1.0),frandom(-0.3,0.3),frandom(-0.3,0.3),frandom(-0.3,0.3),0,0,32);
		TNT1 AAAAAAA 0 A_SpawnItemEx("Wallpart",0,0,0,	random(1,3),0,random(6,12),	random(0,360),0,64);
		stop;
	}
}

Class KickPuff : FistPuff
{
Default {
attacksound "weapons/kick/hit";
seesound "weapons/kick/hit";
	}
states
	{
	Crash:
		TNT1 A 0 A_JumpIf(bdoom_debris ==0,"Melee");
		TNT1 AAAAA 0 A_SpawnItemEx("Wallpart",0,0,0,	random(1,3),0,random(6,12),	random(0,360),0,64);
		stop;
	Melee:
		TNT1 A 1 { 
			A_AlertMonsters(256,AMF_EMITFROMTARGET);
			A_RadiusThrust(2500,80,RTF_THRUSTZ|RTF_NOIMPACTDAMAGE,64);
			}			
		stop;
	}
}


Class KickPuffStrong : FistPuffStrong
{
Default {
decal "KickScorchBerserk";
	}
states
	{
	Crash:
		TNT1 A 0 A_JumpIf(bdoom_debris ==0,"Melee");
		TNT1 AAAAAA 0 A_SpawnItemEx("ShotSmoke",frandom(-3.0,3.0),frandom(-3.0,3.0),frandom(-1.0,1.0),frandom(-0.4,0.4),frandom(-0.4,0.4),frandom(-0.4,0.4),0,0,32);
		TNT1 AAAAAAAAAA 0 A_SpawnItemEx("Wallpart",0,0,0,	random(1,3),0,random(6,12),	random(0,360),0,64);
		stop;
	Melee:
		TNT1 A 1 {
			A_AlertMonsters(512,AMF_EMITFROMTARGET);
			A_RadiusThrust(5000,120,RTF_THRUSTZ,80);
			}
		stop;
	}
}

// This is tied to BD_Fist, so if the user has comment weapon strings, this should be disabled too

Class BD_Berserk : Berserk replaces Berserk
{
Default {
inventory.pickupsound "pickups/berserk";
	}
	
States
	{
	Pickup:
		TNT1 A 0 {
			if (bdoom_weapons == 2) {
				A_GiveInventory("Modernberserk_Regen");
				A_GiveInventory("Modernberserk_Speed");
				A_GiveInventory("Modernberserk_Protection");
				}
			else 
				A_GiveInventory("PowerStrength");
			HealThing(100, 0);
			A_SelectWeapon("BD_Fist");
			}
		stop;
	}
}

Class ModernBerserk_Regen : PowerRegeneration
{
Default {
	powerup.duration -40;
	powerup.strength 5;
	powerup.color "FF 10 10", 0.5;
	}
}

Class ModernBerserk_Speed : PowerSpeed
{
Default {
	powerup.duration -40;
	speed 1.3;
	powerup.color "00 00 00";
	}
}

Class ModernBerserk_Protection : PowerProtection
{
Default {
	+NOPAIN;
	powerup.duration -40;
	Damagefactor 0.5;
	powerup.color "00 00 00";
	}
}
